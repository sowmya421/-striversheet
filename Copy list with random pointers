/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        Node* itr=head;
        Node* front=head;
        while(itr){
            // front=itr->next;
            Node* temp= itr->next;
            itr->next=new Node(itr->val);
            itr->next->next=temp;
            itr=temp;
        }
        itr=head;
        while(itr){
            if(itr->random){
                itr->next->random=itr->random->next;
            }
                itr=itr->next->next;
            
        }
        
        Node* Pseudo= new Node(0);
        Node* copy=Pseudo;
        while(head){
            copy->next=head->next;
            copy=copy->next;
            head->next=head->next->next;
            head=head->next;
            // front=itr->next->next;
            // copy->next=itr->next;
            // itr->next=front;
            // copy=copy->next;
            // itr=itr->next;
        }
        return Pseudo->next;
    }
};
